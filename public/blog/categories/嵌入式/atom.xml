<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 嵌入式 | 成长日志]]></title>
  <link href="http://ghdawn.github.com/blog/categories/嵌入式/atom.xml" rel="self"/>
  <link href="http://ghdawn.github.com/"/>
  <updated>2012-12-02T21:51:18+08:00</updated>
  <id>http://ghdawn.github.com/</id>
  <author>
    <name><![CDATA[清风未明]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[为ARM平台交叉编译GDB]]></title>
    <link href="http://ghdawn.github.com/blog/2012/07/crossgdb/"/>
    <updated>2012-07-30T20:53:00+08:00</updated>
    <id>http://ghdawn.github.com/blog/2012/07/crossgdb</id>
    <content type="html"><![CDATA[<p>为了方便调试嵌入式程序，需要移植一份<em>GDB</em>到ARM平台。</p>

<h2 id="gdb">GDB之前需要先准备的一个库</h2>

<p>编译ＧＤＢ时首先会提示一个错误，就是缺少一个库:<a href="http://en.wikipedia.org/wiki/Ncurses">ncurses</a>。编译的时候会需要它的一些头文件和库。所以还需要在<a href="http://www.gnu.org/software/ncurses/">这里</a>下载一份它的源码。下载好后，解压到需要的路径。为了便于区分，可以在源代码文件夹中，新建一个文件夹<em>release</em>来放编译完成后的文件。进入源码文件夹，执行以下命令，即可完成编译工作：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>./configure –host<span class="o">=</span>arm-none-linux-gnueabi  –prefix<span class="o">=</span>”<span class="nv">$PWD</span>/release” –without-ada –enable-termcap –with-shared
</span><span class='line'>make
</span><span class='line'>make install
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h4 id="section">解释</h4>

<ol>
  <li>
    <p><em>–host</em> 指定了这份源码将要编译到哪个平台上，<em>configure</em>会按照这个参数来寻找编译器，比如我的编译器是<em>arm-none-linux-gnueabi-gcc</em>，所以我就写<em>arm-none-linux-gnueabi</em></p>
  </li>
  <li>
    <p><em>–prefix</em> 指定了编译好的文件将要存放的地方</p>
  </li>
  <li>
    <p>编译GDB的时候提示缺少的库就是<em>termcap</em>，所以需要<em>–enable-termcap</em> 。 </p>
  </li>
  <li>
    <p>其余的选项可以通过<em>./configure –help</em>命令来查找，按需分配。</p>
  </li>
</ol>

<h2 id="gdb-1">编译GDB</h2>

<p>在<a href="http://sources.redhat.com/gdb/download/">这里</a>下载一份GDB的源码准备交叉编译。虽然最新版本是7.4.1，但是我这里一直没有成功编译过去，于是选择了低一点的版本7.3.1。下载后解压到需要的路径。同样为了方便起见我在源代码目录里新建了<em>release</em>文件夹来存放结果。之后使用如下命令来进行编译：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/configure –host<span class="o">=</span>arm-none-linux-gnueabi –enable-shared –prefix<span class="o">=</span>”<span class="nv">$PWD</span>/release” –without-x –disable-gdbtk –without-included-regex –without-included-gettext –disable-tui <span class="nv">LDFLAGS</span><span class="o">=</span>”-L/home/ghdawn/develop/ncurses-5.9/release/lib” <span class="nv">CPPFLAGS</span><span class="o">=</span>”-I/home/ghdawn/develop/ncurses-5.9/release/include”
</span><span class='line'>make
</span><span class='line'>make install
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h4 id="section-1">解释</h4>

<ol>
  <li>
    <p>前三个参数和上面是一样的。</p>
  </li>
  <li>
    <p>在编译的过程中，会出现好多好多的编译错误，无非就是缺少这个缺少那个。而正好我所需要的功能就是最简单的调试，所以其他的我就都不要了。之后的所有<em>without</em>和<em>disable</em>就是每次编译错误后，我关掉的功能。可以察看<em>./configure –help</em>命令中的解释</p>
  </li>
  <li>
    <p>最后两个指定了<em>ncurses</em>的库和头文件存放的位置，指定给GCC</p>
  </li>
</ol>

<p>经过这几步以后，就会在<em>release/bin</em>文件夹下生成所需要的<em>gdb</em>文件，把这个文件复制到开发板上就可以运行了。</p>

<h3 id="section-2">注意</h3>

<p>交叉编译的时候会出现这样一个问题：交叉编译器使用的<em>GLIBC</em>版本高于嵌入式Linux里的版本，这会导致可执行文件在开发板里无法运行。而给开发板里更新<em>GLIBC</em>是一个十分困难的事情，目前我没有找到相关的资料，所以最好还是选择和开发板匹配的交叉编译器。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用单片机Arduino(AVR)与Android设备通讯]]></title>
    <link href="http://ghdawn.github.com/blog/2012/05/android-arduino/"/>
    <updated>2012-05-04T21:57:00+08:00</updated>
    <id>http://ghdawn.github.com/blog/2012/05/android-arduino</id>
    <content type="html"><![CDATA[<h3 id="section">简述需求</h3>
<p>现在的Android设备，像手机，平板等，有很多的资源，比如照相机，音箱等,同时CPU已经很好，运算能力很强。功能十分丰富，但是必须得人手操控才能使用。这么丰富的资源，如果能自动做点事情，或者作为一个控制核心控制其它的东西就更好了，所以Google官方提供了一种方法，将Android设备按附件模式与一个有<a href="http://baike.baidu.com/view/1402520.htm?fromTaglist">USB Host</a>的设备相连，两者通过USB接口相连传输数据，从而实现通过单片机操控手机。（<a href="http://zh.wikipedia.org/zh-cn/USB">USB</a>是主从结构的总线，这里要求Android设备作为从机，单片机作为主机，而一般的开发板附带的usb口都是client，如果需要做这个实验，则需要买<a href="http://item.taobao.com/item.htm?id=12892248805">有USB Host的开发板</a>，或者买专门的 USB host shield模块放在开发板上。）</p>

<p>在这里，Google要求Android平台的版本至少为2.3.3，单片机要求实现了<em>Android Accessory Protocol</em>协议。其中Google官方支持了一个开源硬件平台<a href="http://www.arduino.cc/">Arduino</a>。现阶段，Android只能支持一个USB设备，不过能满足大部分需求了。</p>

<p>Google官方提供了一个简洁的教程（<a href="http://developer.android.com/guide/topics/usb/adk.html">Arduino</a>部分，与<a href="http://developer.android.com/guide/topics/usb/accessory.html">Android</a>部分，以及一份代码示例（包括Android与Arduino部分，在对应的网页里下）。但是教程过于简洁而示例过于复杂：直接按照教程做，很多地方无从下手。按照代码改，代码结构又过于复杂，依然不好下手。于是我在这里耽误了一天多的时间。</p>

<h3 id="arduino">Arduino部分</h3>
<ol>
  <li>在<a href="http://www.arduino.cc/">Arduino</a>下载最新的IDE，它是用JAVA开发的，跨平台。同时几乎所有底层的驱动全部写好，开发的时候只要调用即可，完全感觉不到是在开发单片机，实在很爽。</li>
  <li>下载<a href="https://dl-ssl.google.com/android/adk/adk_release_0512.zip">Google 提供的协议实现代码</a>。解压出来后，将<em>firmware/arduino_libs/</em>下的<em>AndroidAccessory</em>和<em>USB_Host_Shield</em>复制到<em>Arduino IDE</em>的<em>libraries</em>目录下。这两个分别是Android附件协议的实现和USB的驱动。</li>
  <li>如果按照教程，现在只需要打开<em>firmware/demokit/demokit.pde</em>并烧写进开发板，就可以和教程配套的Android程序进行通讯并控制电机之类的驱动了。</li>
  <li>但是自己做开发的话就不要用上面的代码了，太复杂太麻烦。在IDE里新建一个文件，包含<em>USB</em>驱动和<em>AndroidAccessory</em>的头文件，并新建一个<em>AndroidAccessory</em>对象，比如叫acc。在<em>setup()</em>函数中，调用acc.powerOn()方法，即可开始试探链接Android设备。</li>
  <li>在我的应用中，我需要做的是把Android设备中计算的结果以串口的形式发给飞控模块，所以我只需要不断的把Android设备发送来的数据发给串口，再把串口接受到的数据发给Android设备。于是，代码如下：</li>
</ol>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span> <span class="n">id</span><span class="o">=</span><span class="s">&quot;include-usbh&quot;</span><span class="o">&gt;</span><span class="n">include</span> <span class="o">&lt;</span><span class="n">Usb</span><span class="p">.</span><span class="n">h</span> <span class="o">/&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="err">#</span><span class="n">include</span> <span class="o">&lt;</span><span class="n">AndroidAccessory</span><span class="p">.</span><span class="n">h</span> <span class="o">/&gt;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">AndroidAccessory</span> <span class="n">acc</span><span class="p">(</span><span class="err">“</span><span class="n">BuaaITR</span><span class="err">”</span><span class="p">,</span>
</span><span class='line'>		     <span class="err">“</span><span class="n">Demo</span><span class="err">”</span><span class="p">,</span>
</span><span class='line'>		     <span class="err">“</span><span class="n">DemoKit</span> <span class="n">Arduino</span> <span class="n">Board</span><span class="err">”</span><span class="p">,</span>
</span><span class='line'>		     <span class="err">“</span><span class="mf">1.0</span><span class="err">”</span><span class="p">,</span>
</span><span class='line'>		     <span class="err">“</span><span class="nl">http:</span><span class="c1">//www.android.com”,</span>
</span><span class='line'>		     <span class="err">“</span><span class="mo">000000001234567</span><span class="mi">8</span><span class="err">”</span><span class="p">);</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">void</span> <span class="n">setup</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>	<span class="n">Serial</span><span class="p">.</span><span class="n">begin</span><span class="p">(</span><span class="mi">115200</span><span class="p">);</span>
</span><span class='line'>	<span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="err">“\</span><span class="n">r</span><span class="err">\</span><span class="n">nStart</span><span class="err">”</span><span class="p">);</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">acc</span><span class="p">.</span><span class="n">powerOn</span><span class="p">();</span> <span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">void</span> <span class="n">loop</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">byte</span> <span class="n">msg</span><span class="p">[</span><span class="mi">1024</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">acc</span><span class="p">.</span><span class="n">isConnected</span><span class="p">())</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>            <span class="k">while</span><span class="p">(</span><span class="n">Serial</span><span class="p">.</span><span class="n">available</span><span class="p">()</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>              <span class="n">msg</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="n">Serial</span><span class="p">.</span><span class="n">read</span><span class="p">();</span>
</span><span class='line'>              <span class="n">acc</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="n">msg</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">len</span> <span class="o">=</span> <span class="n">acc</span><span class="p">.</span><span class="n">read</span><span class="p">(</span><span class="n">msg</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">msg</span><span class="p">),</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">len</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>              <span class="n">Serial</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="n">msg</span><span class="p">,</span><span class="n">len</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="n">delay</span><span class="p">(</span><span class="mi">200</span><span class="p">);</span> <span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h5 id="section-1">一些解释</h5>
<p>按照这样的方法，单片机这部分就很容易能搞定了，只要Android程序写好了，两个就能匹配工作了。</p>

<ul>
  <li>Arduino简化了开发流程，去掉了主函数，只留下 <em>setup()</em>作为初始化，<em>loop()</em>不断循环。所以把初始化的部分写在<em>setup()</em>里，工作的部分写在<em>loop()</em>中。  </li>
  <li><em>AndroidAccessory</em>对象的构造函数有6个参数，分别为：设备制造商，设备模型，设备描述，设备版本，网址和序列号。其中制造商，模型和版本必须与Android设备上的软件匹配。即开发Android设备上运行的软件时，也需要制定这三个参数，只有这三个参数相同的设备才能互相连接。  </li>
  <li>调用<em>acc.powerOn();</em>来使单片机开始工作  </li>
  <li>单片机与Android设备不一定会匹配，所以需要<em>acc.isConnected()</em>判断是否已经成功的连接。  </li>
  <li>读写方法分别为<code>acc.write(char* msg,int length)</code> 和<code>acc.read(char* msg,int length ,int nakLimit)</code>。其中msg和length分别为存放数据的数组和期望读写的数据长度。读取函数的第三个参数<em>nakLimit</em>，目前我在网上还没找到有人知道是做什么用的，反正设为1就能用。   </li>
</ul>

<h3 id="android">Android部分</h3>
<p>首先声明，这里我是参考了Google的官方文档，同时在Google给的示例代码中改成的，代码已经十分精简，可以直接修改以完成所需的任务。如果有时间，完全可以读Google的代码，从那一大堆代码里修改。<br />
操作USB的时候，SDK版本为<em>2.3.3，即API 10</em>时是一种操作，版本为那之上的是另一种操作。<em>API 10</em>需要装<a href="http://code.google.com/android/add-ons/google-apis/installing.html">add-on library</a>，我用的是<em>API 10</em>。装好之后，在项目属性中，点选<em>Android</em>，把<em>Build Target</em>改为<em>Google APIs</em>。</p>

<p>要想使<em>Accessory</em>工作，需要在<em>AndroidManifest.xml</em>中声明支持<em>UsbManager.ACTION_USB_ACCESSORY_DETACHED</em>，并添加一个过滤器，来过滤设备。如下：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;manifest</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span> <span class="na">package=</span><span class="s">&quot;me.ghdawn&quot;</span> <span class="na">android:versionCode=</span><span class="s">&quot;1&quot;</span> <span class="na">android:versionName=</span><span class="s">&quot;1.0&quot;</span> <span class="nt">/&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>uses-feature android:name=&quot;android.hardware.usb.accessory&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'><span class="ni">&amp;lt;</span>uses-sdk android:minSdkVersion=&quot;10&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'><span class="ni">&amp;lt;</span>application
</span><span class='line'>    android:icon=&quot;@drawable/ic_launcher&quot;
</span><span class='line'>    android:label=&quot;@string/app_name&quot; <span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>uses-library android:name=&quot;com.android.future.usb.accessory&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="ni">&amp;lt;</span>activity
</span><span class='line'>        android:name=&quot;.UsbAccActivity&quot;
</span><span class='line'>        android:label=&quot;@string/app_name&quot; <span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>intent-filter<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>action android:name=&quot;android.intent.action.MAIN&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'>            <span class="ni">&amp;lt;</span>category android:name=&quot;android.intent.category.LAUNCHER&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>/intent-filter<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>intent-filter<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>action android:name=&quot;android.hardware.usb.action.USB_ACCESSORY_ATTACHED&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>/intent-filter<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'>        <span class="ni">&amp;lt;</span>meta-data
</span><span class='line'>            android:name=&quot;android.hardware.usb.action.USB_ACCESSORY_ATTACHED&quot;
</span><span class='line'>            android:resource=&quot;@xml/accessory_filter&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/activity<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/application<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span><span class="ni">&amp;lt;</span>/manifest<span class="ni">&amp;gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
#####一些说明
- <em>API 10</em>使用的是<em>Addon library</em>,需要注明：<em><uses-library android:name="com.android.future.usb.accessory" /></em><br />
- 要说明支持<em>USB_ACCESSORY_ATTACHED</em>模式，所以加上</p>

<pre><code>    &lt;intent-filter&gt;
            &lt;action android:name="android.hardware.usb.action.USB_ACCESSORY_ATTACHED" /&gt;
    &lt;/intent-filter&gt;
</code></pre>

<ul>
  <li>
    <p>可能会有很多USB接口的设备，所以我们还需要筛选一下此程序能接的单片机，所以增加一个<em>accessory_filter.xml</em>来筛选设备。在<em>res</em>文件夹下新建文件夹<em>xml</em>，在其中新建文件<em>accessory_filter.xml</em>，在这里增加需要的单片机的条件。</p>

    <pre><code>   &lt;meta-data
          android:name="android.hardware.usb.action.USB_ACCESSORY_ATTACHED"
          android:resource="@xml/accessory_filter" /&gt;
</code></pre>
  </li>
</ul>

<p>上面这段代码就是注册这个筛选器的。下面这段就是筛选器的内容。还记得上面的<em>Arduino</em>部分中，新建的<em>AndroidAccessory</em>对象吗？那里的第1，2，4个参数正是这里筛选的参数。只有这几个参数匹配的设备才能建立连接。当然，这里筛选条件是可以选的，那几个参数都可以作为筛选条件，只要加在下面就可以。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;resources&gt;</span>
</span><span class='line'>    <span class="nt">&lt;usb-accessory</span> <span class="na">manufacturer=</span><span class="s">&quot;BuaaITR&quot;</span> <span class="na">model=</span><span class="s">&quot;Demo&quot;</span> <span class="na">version=</span><span class="s">&quot;1.0&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/resources&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>注：下文的所有<em>设备</em>一词，均指代<em>Arduino设备</em>，程序则代表<em>Android设备</em>。<br />
这样，就可以开始写代码了。首先需要一个<em>UsbManager</em>对象来管理USB设备，需要一个广播接收器，当系统有广播时，来判断是否为USB附件，并询问是否提供权限。广播的过滤器使用<em>UsbManager.ACTION_USB_ACCESSORY_DETACHED</em>作为<em>action</em>。当接受到一个满足过滤条件的广播时，并且获得了访问的权限，就可以获得该设备的信息，并进行读写了。</p>

<p>广播接收器的代码：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kd">final</span> <span class="n">BroadcastReceiver</span> <span class="n">mUsbReceiver</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BroadcastReceiver</span><span class="o">()</span>
</span><span class='line'>	<span class="o">{</span>
</span><span class='line'>		<span class="nd">@Override</span>
</span><span class='line'>		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">onReceive</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">Intent</span> <span class="n">intent</span><span class="o">)</span>
</span><span class='line'>		<span class="o">{</span>
</span><span class='line'>			<span class="n">String</span> <span class="n">action</span> <span class="o">=</span> <span class="n">intent</span><span class="o">.</span><span class="na">getAction</span><span class="o">();</span>
</span><span class='line'>			<span class="k">if</span> <span class="o">(</span><span class="n">ACTION_USB_PERMISSION</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">action</span><span class="o">))</span>
</span><span class='line'>			<span class="o">{</span>
</span><span class='line'>				<span class="kd">synchronized</span> <span class="o">(</span><span class="k">this</span><span class="o">)</span>
</span><span class='line'>				<span class="o">{</span>
</span><span class='line'>					<span class="n">UsbAccessory</span> <span class="n">accessory</span> <span class="o">=</span> <span class="n">UsbManager</span><span class="o">.</span><span class="na">getAccessory</span><span class="o">(</span><span class="n">intent</span><span class="o">);</span>
</span><span class='line'>					<span class="k">if</span> <span class="o">(</span><span class="n">intent</span><span class="o">.</span><span class="na">getBooleanExtra</span><span class="o">(</span>
</span><span class='line'>					        <span class="n">UsbManager</span><span class="o">.</span><span class="na">EXTRA_PERMISSION_GRANTED</span><span class="o">,</span> <span class="kc">false</span><span class="o">))</span>
</span><span class='line'>					<span class="o">{</span>
</span><span class='line'>						<span class="n">openAccessory</span><span class="o">(</span><span class="n">accessory</span><span class="o">);</span>
</span><span class='line'>					<span class="o">}</span>
</span><span class='line'>					<span class="k">else</span>
</span><span class='line'>					<span class="o">{</span>
</span><span class='line'>						<span class="n">Log</span><span class="o">.</span><span class="na">d</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="err">“</span><span class="n">permission</span> <span class="n">denied</span> <span class="k">for</span> <span class="n">accessory</span> <span class="err">“</span>
</span><span class='line'>						        <span class="o">+</span> <span class="n">accessory</span><span class="o">);</span>
</span><span class='line'>					<span class="o">}</span>
</span><span class='line'>					<span class="n">mPermissionRequestPending</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>				<span class="o">}</span>
</span><span class='line'>			<span class="o">}</span>
</span><span class='line'>			<span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">UsbManager</span><span class="o">.</span><span class="na">ACTION_USB_ACCESSORY_DETACHED</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">action</span><span class="o">))</span>
</span><span class='line'>			<span class="o">{</span>
</span><span class='line'>				<span class="n">UsbAccessory</span> <span class="n">accessory</span> <span class="o">=</span> <span class="n">UsbManager</span><span class="o">.</span><span class="na">getAccessory</span><span class="o">(</span><span class="n">intent</span><span class="o">);</span>
</span><span class='line'>				<span class="k">if</span> <span class="o">(</span><span class="n">accessory</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;</span><span class="n">amp</span><span class="o">;&amp;</span><span class="n">amp</span><span class="o">;</span> <span class="n">accessory</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">mAccessory</span><span class="o">))</span>
</span><span class='line'>				<span class="o">{</span>
</span><span class='line'>					<span class="n">closeAccessory</span><span class="o">();</span>
</span><span class='line'>				<span class="o">}</span>
</span><span class='line'>			<span class="o">}</span>
</span><span class='line'>		<span class="o">}</span>
</span><span class='line'>	<span class="o">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>建立连接：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>	<span class="kd">private</span> <span class="kt">void</span> <span class="nf">openAccessory</span><span class="o">(</span><span class="n">UsbAccessory</span> <span class="n">accessory</span><span class="o">)</span>
</span><span class='line'>	<span class="o">{</span>
</span><span class='line'>		<span class="n">mFileDescriptor</span> <span class="o">=</span> <span class="n">mUsbManager</span><span class="o">.</span><span class="na">openAccessory</span><span class="o">(</span><span class="n">accessory</span><span class="o">);</span>
</span><span class='line'>		<span class="k">if</span> <span class="o">(</span><span class="n">mFileDescriptor</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
</span><span class='line'>		<span class="o">{</span>
</span><span class='line'>			<span class="n">mAccessory</span> <span class="o">=</span> <span class="n">accessory</span><span class="o">;</span>
</span><span class='line'>			<span class="c1">//获得该设备的输入输出流</span>
</span><span class='line'>			<span class="n">FileDescriptor</span> <span class="n">fd</span> <span class="o">=</span> <span class="n">mFileDescriptor</span><span class="o">.</span><span class="na">getFileDescriptor</span><span class="o">();</span>
</span><span class='line'>			<span class="n">mInputStream</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileInputStream</span><span class="o">(</span><span class="n">fd</span><span class="o">);</span>
</span><span class='line'>			<span class="n">mOutputStream</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileOutputStream</span><span class="o">(</span><span class="n">fd</span><span class="o">);</span>
</span><span class='line'>			<span class="c1">//是否能对设备进行读写操作</span>
</span><span class='line'>			<span class="n">canIO</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>			<span class="c1">//定时查询是否有数据可以接收</span>
</span><span class='line'>			<span class="n">timer</span><span class="o">.</span><span class="na">scheduleAtFixedRate</span><span class="o">(</span><span class="k">new</span> <span class="n">TimerTask</span><span class="o">()</span>
</span><span class='line'>			<span class="o">{</span>
</span><span class='line'>				<span class="nd">@Override</span>
</span><span class='line'>				<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span>
</span><span class='line'>				<span class="o">{</span>
</span><span class='line'>					<span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>					<span class="kt">int</span> <span class="n">length</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>					<span class="kt">byte</span><span class="o">[]</span> <span class="n">buffer</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="o">[</span><span class="n">maxBuffer</span><span class="o">];</span>
</span><span class='line'>					<span class="k">try</span>
</span><span class='line'>					<span class="o">{</span>
</span><span class='line'>						<span class="c1">//如果有数据来，则接受数据。</span>
</span><span class='line'>						<span class="k">if</span><span class="o">(</span><span class="n">mInputStream</span><span class="o">.</span><span class="na">available</span><span class="o">()&amp;</span><span class="n">gt</span><span class="o">;</span><span class="mi">0</span><span class="o">)</span>
</span><span class='line'>						<span class="o">{</span>
</span><span class='line'>							<span class="n">length</span><span class="o">=</span><span class="n">mInputStream</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">buffer</span><span class="o">);</span>
</span><span class='line'>							<span class="c1">//处理接收到的数据，按需要自己改。</span>
</span><span class='line'>							<span class="n">usbuart</span><span class="o">.</span><span class="na">onReceive</span><span class="o">(</span><span class="n">buffer</span><span class="o">);</span>
</span><span class='line'>						<span class="o">}&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>				<span class="o">}</span>
</span><span class='line'>				<span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span>
</span><span class='line'>				<span class="o">{</span>
</span><span class='line'>					<span class="c1">// tbhello.setText(&quot;IO error\n&quot; + e.getMessage());</span>
</span><span class='line'>
</span><span class='line'>				<span class="o">}</span>
</span><span class='line'>
</span><span class='line'>			<span class="o">}</span>
</span><span class='line'>			
</span><span class='line'>		<span class="o">},</span> <span class="mi">0</span><span class="o">,</span> <span class="n">delaytime</span><span class="o">);</span>
</span><span class='line'>		<span class="n">Log</span><span class="o">.</span><span class="na">d</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;accessory opened&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>	<span class="o">}</span>
</span><span class='line'>	<span class="k">else</span>
</span><span class='line'>	<span class="o">{</span>
</span><span class='line'>		<span class="n">Log</span><span class="o">.</span><span class="na">d</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;accessory open fail&quot;</span><span class="o">);</span>
</span><span class='line'>	<span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div> 这样，大部分功能就实现完了，现在需要注册广播接收器，并让程序监视USB设备。
</code></pre>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>	<span class="nd">@Override</span>
</span><span class='line'>	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span>
</span><span class='line'>	<span class="o">{</span>
</span><span class='line'>		<span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>		<span class="c1">//使用add-on library时，必须这样定义usbmanager对象</span>
</span><span class='line'>		<span class="n">mUsbManager</span> <span class="o">=</span> <span class="n">UsbManager</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>		<span class="n">mPermissionIntent</span> <span class="o">=</span> <span class="n">PendingIntent</span><span class="o">.</span><span class="na">getBroadcast</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="k">new</span> <span class="n">Intent</span><span class="o">(</span>
</span><span class='line'>		        <span class="n">ACTION_USB_PERMISSION</span><span class="o">),</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'>		<span class="c1">//注册接收器和过滤器</span>
</span><span class='line'>		<span class="n">IntentFilter</span> <span class="n">filter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">IntentFilter</span><span class="o">(</span><span class="n">ACTION_USB_PERMISSION</span><span class="o">);</span>
</span><span class='line'>		<span class="n">filter</span><span class="o">.</span><span class="na">addAction</span><span class="o">(</span><span class="n">UsbManager</span><span class="o">.</span><span class="na">ACTION_USB_ACCESSORY_DETACHED</span><span class="o">);</span>
</span><span class='line'>		<span class="n">registerReceiver</span><span class="o">(</span><span class="n">mUsbReceiver</span><span class="o">,</span> <span class="n">filter</span><span class="o">);&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>	<span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">main</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">onResume</span><span class="o">()</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>	<span class="kd">super</span><span class="o">.</span><span class="na">onResume</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>	<span class="n">Intent</span> <span class="n">intent</span> <span class="o">=</span> <span class="n">getIntent</span><span class="o">();</span>
</span><span class='line'>	<span class="c1">//如果已经打开了一个设备，就不再查询</span>
</span><span class='line'>	<span class="k">if</span> <span class="o">(</span><span class="n">mInputStream</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;</span><span class="n">amp</span><span class="o">;&amp;</span><span class="n">amp</span><span class="o">;</span> <span class="n">mOutputStream</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
</span><span class='line'>	<span class="o">{</span>
</span><span class='line'>		<span class="k">return</span><span class="o">;</span>
</span><span class='line'>	<span class="o">}</span>
</span><span class='line'>	<span class="c1">//只能支持一个设备，如果发现了一个USB设备并且有权限访问，就打开</span>
</span><span class='line'>	<span class="n">UsbAccessory</span><span class="o">[]</span> <span class="n">accessories</span> <span class="o">=</span> <span class="n">mUsbManager</span><span class="o">.</span><span class="na">getAccessoryList</span><span class="o">();</span>
</span><span class='line'>	<span class="n">UsbAccessory</span> <span class="n">accessory</span> <span class="o">=</span> <span class="o">(</span><span class="n">accessories</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">?</span> <span class="kc">null</span> <span class="o">:</span> <span class="n">accessories</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
</span><span class='line'>	<span class="k">if</span> <span class="o">(</span><span class="n">accessory</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
</span><span class='line'>	<span class="o">{</span>
</span><span class='line'>		<span class="k">if</span> <span class="o">(</span><span class="n">mUsbManager</span><span class="o">.</span><span class="na">hasPermission</span><span class="o">(</span><span class="n">accessory</span><span class="o">))</span>
</span><span class='line'>		<span class="o">{</span>
</span><span class='line'>			<span class="n">openAccessory</span><span class="o">(</span><span class="n">accessory</span><span class="o">);</span>
</span><span class='line'>		<span class="o">}</span>
</span><span class='line'>		
</span><span class='line'>	<span class="o">}</span>
</span><span class='line'>	<span class="k">else</span>
</span><span class='line'>	<span class="o">{</span>
</span><span class='line'>		<span class="n">Log</span><span class="o">.</span><span class="na">d</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;mAccessory is null&quot;</span><span class="o">);</span>
</span><span class='line'>	<span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">onPause</span><span class="o">()</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>	<span class="kd">super</span><span class="o">.</span><span class="na">onPause</span><span class="o">();</span>
</span><span class='line'>	<span class="n">closeAccessory</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">onDestroy</span><span class="o">()</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>	<span class="n">unregisterReceiver</span><span class="o">(</span><span class="n">mUsbReceiver</span><span class="o">);</span>
</span><span class='line'>	<span class="kd">super</span><span class="o">.</span><span class="na">onDestroy</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
</code></pre>

<p>如果需要发送数据，就这样：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">send</span><span class="o">(</span><span class="kt">byte</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span>
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>	    <span class="k">if</span><span class="o">(</span><span class="n">canIO</span><span class="o">)</span>
</span><span class='line'>	    <span class="o">{</span>
</span><span class='line'>	    	<span class="k">try</span>
</span><span class='line'>            <span class="o">{</span>
</span><span class='line'>	            <span class="n">mOutputStream</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span>
</span><span class='line'>            <span class="o">{</span>	
</span><span class='line'>	            <span class="c1">// TODO Auto-generated catch block</span>
</span><span class='line'>	            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>	    <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure></notextile></div><br />
用到的对象如下：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">TAG</span> <span class="o">=</span> <span class="err">“</span><span class="n">DemoKit</span><span class="err">”</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">ACTION_USB_PERMISSION</span> <span class="o">=</span> <span class="s">&quot;com.google.android.DemoKit.action.USB_PERMISSION&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="n">UsbManager</span> <span class="n">mUsbManager</span><span class="o">;</span>
</span><span class='line'><span class="kd">private</span> <span class="n">PendingIntent</span> <span class="n">mPermissionIntent</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="kt">int</span> <span class="n">maxBuffer</span><span class="o">=</span><span class="mi">1024</span><span class="o">;</span>
</span><span class='line'><span class="kd">private</span> <span class="kt">boolean</span> <span class="n">canIO</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'><span class="n">UsbAccessory</span> <span class="n">mAccessory</span><span class="o">;</span>
</span><span class='line'><span class="n">ParcelFileDescriptor</span> <span class="n">mFileDescriptor</span><span class="o">;</span>
</span><span class='line'><span class="n">FileInputStream</span> <span class="n">mInputStream</span><span class="o">;</span>
</span><span class='line'><span class="n">FileOutputStream</span> <span class="n">mOutputStream</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">Timer</span> <span class="n">timer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Timer</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>  
</code></pre>

<p>如果步骤没出错的话，至此，把Arduino开发板插到Android设备上，应该就能互相传数据了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为OMAP4430安装Linux/Android系统]]></title>
    <link href="http://ghdawn.github.com/blog/2012/02/install-linux/"/>
    <updated>2012-02-13T12:33:00+08:00</updated>
    <id>http://ghdawn.github.com/blog/2012/02/install-linux</id>
    <content type="html"><![CDATA[<p>这块开发板没有板载flash，所以操作系统从SD卡引导。这样，我们的操作系统就需要安装在SD卡上。
##准备sd卡</p>

<ol>
  <li>插入sd卡，运行如下命令察看sd卡是否已经挂载</li>
</ol>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>df -h
</span><span class='line'>文件系统            容量  已用  可用 已用%% 挂载点
</span><span class='line'>/dev/sda7              30G   15G   14G  52% /
</span><span class='line'>udev                  1.5G  4.0K  1.5G   1% /dev
</span><span class='line'>tmpfs                 602M  1.1M  601M   1% /run
</span><span class='line'>none                  5.0M     0  5.0M   0% /run/lock
</span><span class='line'>none                  1.5G  472K  1.5G   1% /run/shm
</span><span class='line'>/dev/mmcblk0p1        1.8G   35M  1.7G   3% /media/KINGSTON
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ol>
  <li>
    <p>如果已挂载，就卸载它(我的sd卡,设备为/dev/mmcblk0,分区为/dev/mmcblk0p1,挂载在/media/KINGSTON下了）</p>

    <pre><code> sudo umount /media/KINGSTON
</code></pre>
  </li>
</ol>

<h2 id="sd">将sd卡格式化成双分区</h2>

<h4 id="section">先说点别的</h4>
<p>如果有兴趣，请仔细阅读<a href="http://code.google.com/p/beagleboard/wiki/LinuxBootDiskFormat">这篇</a>文档，在网上能找到的所有关于SD双分区的教程，几乎全部和他一样，比如<a href="http://blog.csdn.net/lqf785435771/article/details/7096320">这里</a>，<a href="http://www.fengfly.com/plus/view-163969-1.html">这里</a>，和<a href="http://www.anddev.org/zoom-mdk-f25/part-5-booting-x-loader-and-u-boot-from-sd-card-t2500.html">这里</a>。当然，如果懒得看英文，不看也无妨。我认为其重点如下</p>

<ol>
  <li>
    <p>记住sd卡的格式化目标格式，即磁头数255，每个磁道上有63个扇区，以及计算出来的柱面数。原文如下：
 #cylinders = FLOOR (the number of Bytes on the SD Card (from above) / 255 / 63 / 512 )
 总的字节数，即运行如下命令，看到的bytes</p>

    <pre><code> sudo fdisk /dev/mmcblk0 #换成你的设备，切记是设备不是分区，如mmcblk0p1,或sdb1等为分区，mmcblk0,sdb为设备
</code></pre>

    <p>这样即可获得这h,s,c这三个参数</p>
  </li>
  <li>
    <p>第一分区的系统类型的十六进制代码，我已经查过了，可以告诉你是 c (W95 FAT32 (LBA))</p>
  </li>
</ol>

<p>有了这两个信息（虽然不知道为什么要这样设定h,s,c这三个信息），有兴趣的同学可以按照上述文章进行格式化。</p>

<p>注意注意！！首先，这些地方写的fdisk命令中，单位都是cylinder，而这是已经废弃了的单位，现在用的都是sector。所以这些文档的内容，都太太太老了，即使文章是新发的。其次，我也不知道为什么，反正我这样做完，没有用，fdisk可以格式化的的sd卡，却不能指定上述信息。所以在格式化完以后，我的开发板不能用这个sd卡启动，会出现这么几个错误：</p>

<ul>
  <li>找不到sd卡</li>
  <li>无法执行MLO</li>
  <li>执行MLO，找不到分区表</li>
</ul>

<p>我还是想不通为什么，反正我这样做没有用，不知道他们是怎么做到的，能成功引导。
我很奇怪，这么这么多人都用了这个方法并写了出来，为什么我就是做不成功？</p>

<h4 id="sd-1">开始格式化sd卡</h4>
<p>我的解决方案是：使用sfdisk，另一个分区程序。用<em>man</em>得到的这两个程序的信息差不多，但是fdisk的界面要友好很多，操作也简单，只是，没用。sfdisk的用户界面和操作恶心到了极致，但是将就一下能给我把活干了。</p>

<ol>
  <li>
    <p>在命令行内执行如下命令，清除sd卡开头的1024个字节（这里似乎存放的分区表，fdisk和sfdisk都不会清除那块信息，但是如果不清空，还是有问题）</p>

    <pre><code> sudo dd if=/dev/zero of=/dev/mmcblk0 bs=1024 count=1024 #of后换成你的设备
</code></pre>
  </li>
  <li>
    <p>执行命令，其中h，s，c为上一步说的信息，请提前算好。-D表示支持dos方式。因为要格式的双分区，第一个分区是fat格式的。</p>

    <pre><code>  sudo sfdisk -D -H 255 -S 63 -C 243 /dev/mmcblk0
</code></pre>
  </li>
  <li>
    <p>这时应该会提示找不到分区（第一步已经清除了），并让你输入分区信息。这里会需要设定四个分区。我们只要前两个分区把空间填满，后两个设置为empty就好了。输入如下</p>

    <pre><code> 0 9 c * 回车      
 9 (你的c数-9） L 回车          
 回车           
 回车           
</code></pre>
  </li>
  <li>
    <p>解释：此处输入格式为起始柱面，柱面数，系统类型，是否可启动。第一个分区用于引导启动，大小不用太大，于是给了9个柱面的空间，c表示fat32（见上一块），*表示可引导启动。第二个分区使用剩下所有空间，系统类型为Linux。其余的均为空</p>
  </li>
  <li>这样设置完后，会提示是否写入，输入y即可完成设置，得到两个分区mmcblk0p1,mmcblk0p2。如果用USB口的读卡器，则可能是sdb1,sdb2。</li>
  <li>
    <p>输入以下命令，将两个分区格式化。<em>mkfs.vfat</em>用于格式化fat系列分区，<em>-F 32</em>指定分区表为32位。<em>-n</em> 给分区起名字为boot。<em>mkfs.ext3</em>用于格式化ext3分区，<em>-L</em> 也是起名字(我叫它 linux_fs）</p>

    <pre><code> sudo mkfs.vfat -F 32 -n boot /dev/mmcblk0p1          
 sudo mkfs.ext3 -L linux_fs /dev/mmcblk0p2        
</code></pre>
  </li>
</ol>

<p>至此，最令人头疼的部分就解决了。</p>

<p>在头疼这么久以后，我发现<a href="http://git.openembedded.org/openembedded/tree/contrib/angstrom/omap3-mkcard.sh">这里</a>有一个脚本可以很好的做完这些事情，只要以管理员身份执行，并将你的设备路径作为第一个参数即可。</p>

<h2 id="section-1">安装系统</h2>

<h3 id="linux">安装Linux</h3>
<ol>
  <li>挂载SD卡</li>
  <li>在<a href="https://gforge.ti.com/gf/download/frsrelease/387/4170/L24.9-PandaBoard_minimal-fs.tar.gz">这里</a>下载linux最小系统，并解压缩（可能需要sudo）。</li>
  <li>
    <p>把其中的<em>boot</em>文件夹下的<em>MLO</em>，<em>u-boot.bin</em>,<em>uImage</em>复制进boot分区</p>

    <pre><code> sudo cp boot/* /media/boot/        
</code></pre>
  </li>
  <li>
    <p>把<em>angstrom_minimal-fs</em>内的文件和文件夹复制进第二个分区 <em>linux_fs</em> （可能需要sudo）</p>

    <pre><code> sudo cp -rf angstrom/* /media/linux_fs        
</code></pre>
  </li>
  <li>
    <p>刷新文件缓冲，确认文件都已经复制进去（如果不执行这句，有可能文件没拷进分区内）</p>

    <pre><code> sync        
</code></pre>
  </li>
  <li>把卡插进开发板，开机实验吧！</li>
</ol>

<h3 id="android">安装Android</h3>

<p>其实方法都一样，只是格式化的时候建议把第二个分区名字改成类似android_fs之类的好认的名字，并且在<a href="http://code.google.com/p/pandroid/downloads/list">这里</a>下载android文件系统，其余操作同上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OMAP4430 开发环境配置手记]]></title>
    <link href="http://ghdawn.github.com/blog/2012/02/about-omap4430/"/>
    <updated>2012-02-09T15:25:00+08:00</updated>
    <id>http://ghdawn.github.com/blog/2012/02/about-omap4430</id>
    <content type="html"><![CDATA[<p>由于学习的内容与嵌入式开发有关，所以在这里记录一下学习过程。这次为开箱后的开发环境配置。</p>

<p>我这块OMAP4430开发板配双核Cortex-A9处理器，运行系统为Ubuntu，具体信息见<a href="http://pandaboard.org/">官网PandaBoard</a>。</p>

<p>我的计算机环境：Linux Mint 12</p>

<h1 id="gcc">安装GCC交叉编译环境</h1>

<h2 id="section">通过软件包管理器自动安装</h2>
<p>打开新立得包管理器，搜索_binutils-arm-linux-gnueabi_，选中以下软件包：  </p>

<ul>
  <li>binutils-arm-linux-gnueabi</li>
  <li>g++-arm-linux-gnueabi</li>
  <li>gcc-arm-linux-gnueabi</li>
  <li>cpp-arm-linux-gnueabi</li>
</ul>

<h2 id="section-1">自己下载，手动安装</h2>
<ul>
  <li>在<a href="http://blog.chinaunix.net/link.php?url=http://www.codesourcery.com%2Fsgpp%2Flite%2Farm%2Fportal%2Frelease1293">这里</a>下载最新的<em>ARM-GCC交叉编译器</em></li>
  <li>将压缩包解压到某个位置（可以改个名字，这个文件名太长了。如我这里放在~/develop/arm-linux-gnueabi）</li>
</ul>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> tar xvf arm-2010q1-202-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
  <li>将其中的<em>bin</em>文件夹加入环境变量</li>
</ul>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> vim .bashrc <span class="c">#打开配置文件，加入如下内容</span>
</span><span class='line'> PATH+<span class="o">=</span>:~/develop/arm-linux-gnueabi/bin <span class="c">#切记加上：以和其他路径分开</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
  <li>保存重启</li>
</ul>

<p>安装完成以后，在终端里运行：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>arm-linux-gnueabi-g++ -mcpu<span class="o">=</span>cortex-a9 -mfpu<span class="o">=</span>neon test.cpp -o <span class="nb">test</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>编译成功说明环境已经安装好了，可得到<em>test</em>文件
###一些指令
<a href="http://gcc.gnu.org/onlinedocs/gcc/ARM-Options.html">这里</a>有GCC关于ARM的全部指令</p>

<ul>
  <li><em>-mcpu=</em> 指定目标机的类型，可以选择类似cortex-a9,arm7tdmi等各种型号，只要确定你的GCC支持。我的是corte-a9</li>
  <li><em>-mfpu=</em> 选择浮点运算设备，我的开发板有neon</li>
  <li><em>-o</em> 指定编译结果名称</li>
</ul>

<h1 id="section-2">运行测试程序</h1>
<ul>
  <li>插好鼠标键盘，接电开机。以前使用的开发板需要用串口和PC机相连，板子通过PC终端来控制，并输出信息，所以需要配置<em>minicom</em>来访问串口。但是这块板子在解压缩Linux内核后就不再向串口输出信息，也无法通过串口输入指令，所以接不接串口都无所谓。  </li>
  <li>在开发板中运行测试程序，可以通过配置TFTP或NFS的方式，也可以用可移动设备拷进去。我用的是后者，将test文件拷入U盘。但是板上的Ubuntu不能自动挂载U盘。所以：  </li>
  <li>打开开发板的终端，输入如下指令：</li>
</ul>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ls /dev | grep sda  <span class="c">#察看是否已经识别U盘，如果结果里没有类似sda1的字样，请检查U盘是否连接好了</span>
</span><span class='line'>sudo mkdir /media/usb
</span><span class='line'>sudo mount -t vfat -o rw /dev/sda /media/usb
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
  <li>这时U盘应该已经挂载到<em>/media/usb</em>，进入该目录，运行测试程序</li>
</ul>

<h3 id="mount">mount指令的一些参数</h3>
<ul>
  <li><em>mount</em>的字面解释为：用某方式把某设备或文件挂载到某目录下</li>
  <li><em>-t</em> 选择要挂载的文件系统，如ntfs(NTFS),vfat(FAT32),iso9660(光盘)</li>
  <li><em>-o</em> 选择设备的挂载方式，如rw(可读可写),ro(只读),loop(挂载的是文件)</li>
</ul>
]]></content>
  </entry>
  
</feed>
